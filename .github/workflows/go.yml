# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags: "*"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # access to check out code and install dependencies
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'

    - name: Install dependencies
      run: go mod tidy
      
    - name: Build
      run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read # access to check out code and install dependencies
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'
    - name: Install dependencies
      run: |
        go mod tidy
        go install gotest.tools/gotestsum@latest

    - name: Test
      run: gotestsum --format github-actions --jsonfile test-output.log -- -v ./...
    - name: Report
      uses: becheran/go-testreport@main
      with:
        input: test-output.log

  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'
    
    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
    
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}